
---
title: "Client Report - Flight Data"
subtitle: "Course DS 250"
author: "Josh LaPointe"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---

```{python}
import pandas as pd 
import plotly.express as px
```


## Elevator Pitch

__After looking at the data, I have found statistics which may be useful in different scenarios. At a corporate level, a company may not be as interested in looking at uncontrollable weather related delays, instead choosing to focus on avoidable security related delays. A consumer, however, who is planning a vaccation might benefit from looking at specific data about the airport they are flying into such as rates of weather related delays so that they can check the forecast ahead of time and determine whether to book a flight__
____


## QUESTION|TASK 1

__Fix all of the varied missing data types in the data to be consistent__
```{python}

import pandas as pd
import plotly.express as px
import numpy as np 


url = 'https://raw.githubusercontent.com/byuidatascience/data4missing/master/data-raw/flights_missing/flights_missing.json'
df = pd.read_json(url)

df = df.replace([-999,0], "NaN")

df_2005 = df[df["year"] == 2005]


df_2005 = pd.crosstab(index=df_2005["airport_code"], columns=df_2005["month"], values=df_2005["num_of_delays_late_aircraft"], aggfunc=np.sum)

df_2005

```

__All values of 0 and -999 have been replaced with "NaN"__

## QUESTION|TASK 2 

__Which airport has the worst delays?__

```{python}

df = df[df["year"] <= 2015]

df_total_flights = df.groupby("airport_code")["num_of_flights_total"].sum()

df_total_delays = df.groupby("airport_code")["num_of_delays_total"].sum()

df_proportion_delayed = df_total_delays / df_total_flights

df_avg_delay_time_hours = (df.groupby("airport_code")["minutes_delayed_total"].sum() / df_total_delays) / 60

delay_table = pd.DataFrame({
    "Total Flights": df_total_flights,
    "Total Delays": df_total_delays,
    "Delay frequency": df_proportion_delayed,
    "Avg Delay (hrs)": df_avg_delay_time_hours
})
delay_table

```

__All airports in the data have a delay frequency sitting around 20%. Since the quality of a delay is different from the frequency, the deciding factor is the delay length. ORD airport, which happens to have the second highest delay frequency at 23%  has the longest average delay time at 1hr 8mins. Having the longest average delay time therefore makes ORD the airport with the worst delays__




## QUESTION|TASK 3
__What is the best month to fly if you want to avoid delays of any length?__

```{python}

df_monthly_delays = df.groupby("month")["num_of_delays_total"].sum()

monthly_stats = pd.DataFrame({
       "Month": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    "Total Delays": df_monthly_delays.values[:-1]
})

monthly_stats
```

__To find the best month to fly in while avoiding delays, I looked at the total number of delays across all airports in each month. It should be noted that looking at individual airports is not in the intrest of finding a general answer. Because values fluctuate from year to year, there are multiple months which are optimal to travel in without delays. Those months are December and October, as they have the fewest average number of delays__


## QUESTION|TASK 4
__Your job is to create a new column that calculates the total number of flights delayed by weather__


```{python}
df = df.replace("NaN", np.nan)
# task 4
late_aircraft_mean = df["num_of_delays_late_aircraft"].mean()
df["num_of_delays_late_aircraft"].fillna(late_aircraft_mean, inplace=True)

# task 4.A
df["weather_delays"] = df["num_of_delays_weather"]


# task 4.B
df["weather_delays"] += 0.3 * df["num_of_delays_late_aircraft"]

# task 4.C 
df["weather_delays"] += np.where(df["month"].isin(["April", "May", "June", "July", "August"]),
                                 0.4 * df["num_of_delays_nas"],
                                 0.65 * df["num_of_delays_nas"])


monthly_weather_delays = df.groupby("month")["weather_delays"].sum().round(decimals=0)
full_monthly_stats = pd.DataFrame({
    "Month": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", "NaN"],
    "Total Delays": df_monthly_delays.values,
    "Total Weather Delays": monthly_weather_delays.values,
})

# excluding NaN row
full_monthly_stats.head(12)
```

__Table showing total weather delays with missing values in the late aircraft variable being replaced by the mean of that variable before any calculations are performed__




## QUESTION|TASK 5
__Using the new weather variable calculated above, create a barplot showing the proportion of all flights that are delayed by weather at each airport. Discuss what you learn from this graph__

```{python}


fig = px.bar(df, x="airport_code", y="weather_delays", title="Number of Flights Delayed by Weather")

fig.update_xaxes(title_text="Airport")
fig.update_yaxes(title_text="Weather Delays")
fig.show()
```

__This graph shows that the Dulles, San Diego, and Salt Lake airports have very low weather related delays compared to the other airports shown. Based on this, it can be inferred that travelers visiting those areas will be less likely to have their flight delayed. This means that those three airports are comparatively more reliable to select for vacations or holiday travel__  